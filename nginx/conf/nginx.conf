#使用方法ln -s /root/server/nginx/nginx.conf /root/nginx/conf/nginx.conf
####
user  root;
#user  nobody;
#cpu的优化
worker_processes  1;
#woker进程优先级,越小时时间片切换越长（调高减少切换时间）,值是-20到19，
worker_priority 19;
#自动绑定cpu跟进程的关系，绑定的是CPU和进程 （CPU的掩码）
worker_cpu_affinity auto;



#########12
#给线程池
#thread_pool default threads=32 max_queue=65536;
#########12

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;

events {
    #设置单个worker连接数（如：2核x10万），一个连接232字节，事件96字节(受文件句柄数限制)
    worker_connections  200000;
    #当前最大连接数(受文件句柄数限制)
    #worker_rlimit_nofile 100000;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    #default_type text/html;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    keepalive_timeout  65;

    gzip  on;
    gzip_min_length 1024;
    gzip_comp_level  6;
    gzip_types  text/pian  text/css;
    gzip_http_version 1.1;
    gzip_disable "MSIE [1-6]\.";
    sendfile on;

    ###动态负载
    upstream swoole_server {
        #upsync_timeout超时时间，upsync_interval定时获取事件
        upsync 127.0.0.1:8500/v1/kv/upstreams/swoole_test upsync_timeout=6m upsync_interval=500ms upsync_type=consul
        #是否依赖consul的运行
        strong_dependency=on;
        #拉去后生成配置文件
        upsync_dump_path /usr/local/nginx/conf/servers_test.conf;
        include /usr/local/nginx/conf/servers_test.conf;
    }

    ##############10代理缓存（）
    #设置缓存目录
    #levels=1:2设置多级目录
    #keys_zone=my_cache:20m缓存时间为20秒
    #max_size=1g最大缓存文件大小
    #inactive=10未访问时删除10(S秒M分）
    #use_temp_path关闭时直接写入到缓存文件中
    proxy_cache_path  /usr/local/nginx/cache  levels=1:2  keys_zone=my_cache:20m  max_size=1g inactive=1m  use_temp_path=off;
    ##############10代理缓存
    server {

        listen       80;
        server_name  localhost;

        #8##############
        gzip On;
        gzip_comp_level 1;#默认1（1-9），一般最高设置6就可以
        #8##############

        #charset koi8-r;
        #access_log  logs/host.access.log  main;

        #7start
        #从url中匹配id
        if ( $request_uri ~* ^\/.*id_(\d+).* ) {
           #赋值
           set $key $1;
        }

        #处理php
        location ~ .*\.php?$ {
            root           /var/www/html;
            default_type text/html;
            autoindex on;
            fastcgi_pass   192.168.5.30:9000;
            fastcgi_index  index.php;
            fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            fastcgi_param  PATH_INFO  $fastcgi_path_info;
            fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;
            include        fastcgi_params;
        }

        #负载均衡
        location /upstream {
            #11
            #default_type text/html;
            proxy_cache_bypass $no_cache;
            #return 200 $no_cache;
            #11
            #10
            proxy_http_version 1.1 ; #http协议版本
            proxy_cache my_cache; #启用缓存
            proxy_cache_valid any  1m; #设置哪些请求会缓存
            proxy_cache_key $scheme$proxy_host$uri$is_args$args; # 设置缓存的key
            proxy_cache_min_uses 1; #最小访问几次才会缓存
            proxy_cache_lock on; #如果说并发情况下,只会有一个请求落到后端服务器
            proxy_cache_methods GET HEAD POST;#那种类型的请求缓存
            #10

            #重写header打印真实的ip和端口
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host:$proxy_port;
            #忽略服务器缓存的要求
            proxy_ignore_headers Cache-Control;
            #针对静态文件设置缓存设置
            #expires 30m;
            proxy_next_upstream timeout;
            #重试次数
            proxy_next_upstream_tries 5;
            #重试的超时时间
            proxy_next_upstream_timeout 10;
            proxy_send_timeout 10;
            proxy_read_timeout 10;
            proxy_connect_timeout 10;
            proxy_pass http://swoole_server;
        }

        #7stop


        #6 开始防盗链 http://10.0.0.4/1.jpg
         location ~* \.(gif|jpeg|png|jpg)$ {
            root /sftpdir/www;
            valid_referers 10.0.0.1  *.23673.com;
            if ( $invalid_referer ) {
                #定向到某个网站上
                rewrite  ^/   http://www.baidu.com/404.jpg break;
                #return 403 "$request_filename";
            }
         }
        #6 结束


        location ~* \.(txt|log|sql){
           deny all;
        }

        #配置静态文件绝对路径
        location ~* \.(jpg|png|jpeg){
            root /sftpdir/www/images;
            #图片防盗链
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        location = /50x.html {
            root   html;
        }
    }
    include sites-enabled/*.conf;
}